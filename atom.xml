<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aier02</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aier02.com/"/>
  <updated>2018-08-27T16:59:02.063Z</updated>
  <id>http://aier02.com/</id>
  
  <author>
    <name>易安明</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>统计学习方法概论</title>
    <link href="http://aier02.com/2018/08/28/statistic_1/"/>
    <id>http://aier02.com/2018/08/28/statistic_1/</id>
    <published>2018-08-27T16:58:59.803Z</published>
    <updated>2018-08-27T16:59:02.063Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Aug 28 2018 01:01:44 GMT+0800 (GMT+08:00) --><p>李航老师的《统计学习方法》基本已经过一遍了，感觉只是略懂皮毛，现为了加强知识点的认识和部分课后题的实现，有必要进行个人总结。</p><h1 id="统计学习"><a class="markdownIt-Anchor" href="#统计学习"></a> 统计学习</h1><h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2><p>statistical learning 是关于计算机基于数据构建构建统计模型并运用模型对数据进行预测和分析的一门学科，是概率论、统计学、信息论、计算理论、最优化理论和计算机科学等学科的交叉学科。</p><h2 id="学习对象和目的"><a class="markdownIt-Anchor" href="#学习对象和目的"></a> 学习对象和目的</h2><p>从数据出发，提取数据的特征，抽象出数据的模型（概率统计模型），并对数据进行预测和分析</p><h2 id="实现统计学习方法的一般步骤"><a class="markdownIt-Anchor" href="#实现统计学习方法的一般步骤"></a> 实现统计学习方法的一般步骤</h2><ul><li>得到一个有限的训练数据集合</li><li>确定包含所有可能的模型的假设空间，即学习的模型的集合</li><li>确定模型选择的准则，即学习的策略</li><li>实现求解最优模型的算法，即学习的算法</li><li>通过学习方法选择最优的模型</li><li>利用最优模型对新的数据进行预测或则分析</li></ul><p>简而言之：数据-&gt;假设空间-&gt;策略-&gt;算法-&gt;最优模型-&gt;预测分析</p><h1 id="监督学习"><a class="markdownIt-Anchor" href="#监督学习"></a> 监督学习</h1><p>统计学习包括了监督学习，非监督学习，半监督学习和强化学习。</p><h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2><p>输入所有可能取值的集合称为输入空间，同理输出所有可能的取值集合称为输出空间，通常output space 远小于 input space；而特征空间则是所有特征向量所在的空间，特征向量用于表示一个输入实例，特征空间的每个维度对应一个特征，输入空间可以和特征空间相同，也可把输入空间映射到空间，模型实质是定义在特征空间上的（对特征向量进行学习）。X表示输入变量，Y表示输出变量，输入变量X中的第i个表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mo>(</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo>(</mo><mn>1</mn><mo>)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo>(</mo><mn>2</mn><mo>)</mo></mrow></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo>(</mo><mi>n</mi><mo>)</mo></mrow></msubsup><msup><mo>)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">x_i=(x_i^{(1)},x_i^{(2)},...,x_i^{(n)})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.0448em"></span><span class="strut bottom" style="height:1.321664em;vertical-align:-.276864em"></span><span class="base"><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em"><span style="top:-2.4231360000000004em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span><span style="top:-3.2198em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.276864em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em"><span style="top:-2.4231360000000004em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span><span style="top:-3.2198em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.276864em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em"><span style="top:-2.4231360000000004em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span><span style="top:-3.2198em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathit mtight">n</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.276864em"></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8913309999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right:.13889em">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p>N个数据的训练数据集(labled)表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>=</mo><mo>{</mo><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo>)</mo><mo separator="true">,</mo><mo>(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo>)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo>(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo>)</mo><mo>}</mo></mrow><annotation encoding="application/x-tex">T=\{(x_1,y_1),(x_2,y_2),...,(x_N,y_N)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.75em"></span><span class="strut bottom" style="height:1em;vertical-align:-.25em"></span><span class="base"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.32833099999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right:.10903em">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.32833099999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right:.10903em">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p><p>输入到输出的映射关系由模型进行表示，所有可能的由输入空间（特征空间）到输出空间的映射的集合组成了假设空间，学习的范围局限在假设空间中。</p><h1 id="统计学习的三要素"><a class="markdownIt-Anchor" href="#统计学习的三要素"></a> 统计学习的三要素</h1><h2 id="模型"><a class="markdownIt-Anchor" href="#模型"></a> 模型</h2><p>统计学习首先考虑是学习什么样的模型，在监督学习中就是要学习的条件概率分布或者决策函数，由所有可能的模型构成的集合组成了假设空间F,通常是一个由参数决定的函数族.<br>决策函数模型的集合表示为$$F={f|Y=f_\theta(X),\theta\in R^n}$$<br>条件概率模型的集合表示为$$F={f|P=P_\theta(Y|X),\theta\in R^n}$$<br>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.69444em;vertical-align:0"></span><span class="base"><span class="mord mathit" style="margin-right:.02778em">θ</span></span></span></span>取值于n维的欧氏空间，称为参数空间</p><h2 id="策略"><a class="markdownIt-Anchor" href="#策略"></a> 策略</h2><p>有了假设空间，接着考虑按照什么样的准则学习最优的模型，称为策略。</p><h3 id="损失函数和风险函数"><a class="markdownIt-Anchor" href="#损失函数和风险函数"></a> 损失函数和风险函数</h3><p>损失函数度量模型预测的好坏（预测的结果和标记的差距），风险函数度量平均意义下的模型预测的好坏（在具体某次预测可能出错的期望）</p><h4 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h4><p>记作L(f(X),Y)&gt;=0,常见类型:</p><ul><li>0-1损失函数（0-1 loss fuction ）：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>(</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo><mo separator="true">,</mo><mi>Y</mi><mo>)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>Y</mi><mo>≠</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>Y</mi><mo>=</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L(f(X),Y) = \begin{cases} 1, &amp; Y \neq f(X)\\ 0, &amp; Y = f(X) \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.75em"></span><span class="strut bottom" style="height:3.0000299999999998em;vertical-align:-1.25003em"></span><span class="base"><span class="mord mathit">L</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="minner"><span class="mopen delimcenter" style="top:0"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em"><span style="top:-3.69em"><span class="pstrut" style="height:3.008em"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em"><span class="pstrut" style="height:3.008em"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em"></span></span></span></span><span class="arraycolsep" style="width:1em"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em"><span style="top:-3.69em"><span class="pstrut" style="height:3.008em"></span><span class="mord"><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">≠</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span></span></span><span style="top:-2.25em"><span class="pstrut" style="height:3.008em"></span><span class="mord"><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em"></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>平方损失函数(quadratic loss function):</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>(</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo><mo separator="true">,</mo><mi>Y</mi><mo>)</mo><mo>=</mo><mo>(</mo><mi>Y</mi><mo>−</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo><msup><mo>)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(f(X),Y) =(Y-f(X))^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8641079999999999em"></span><span class="strut bottom" style="height:1.1141079999999999em;vertical-align:-.25em"></span><span class="base"><span class="mord mathit">L</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8641079999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>绝对损失函数(absolute loss fuction):</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>(</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo><mo separator="true">,</mo><mi>Y</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mo>(</mo><mi>Y</mi><mo>−</mo><mi>f</mi><mo>(</mo><mi>X</mi><mo>)</mo><mo>)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">L(f(X),Y) =|(Y-f(X))|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.75em"></span><span class="strut bottom" style="height:1em;vertical-align:-.25em"></span><span class="base"><span class="mord mathit">L</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span></span></p><h3 id="经验风险和结构风险"><a class="markdownIt-Anchor" href="#经验风险和结构风险"></a> 经验风险和结构风险</h3><p>模型f(x)关于训练数据集的平均损失称为经验风险：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>m</mi><mi>p</mi></mrow></msub><mo>(</mo><mi>f</mi><mo>)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>L</mi><mo>(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">R_{emp}(f) =\frac 1N\sum_{i=1}^NL(y_i,f(x_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8283360000000002em"></span><span class="strut bottom" style="height:3.106005em;vertical-align:-1.277669em"></span><span class="base"><span class="mord"><span class="mord mathit" style="margin-right:.00773em">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.15139200000000003em"><span style="top:-2.5500000000000003em;margin-left:-.00773em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">e</span><span class="mord mathit mtight">m</span><span class="mord mathit mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.286108em"></span></span></span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord mathit" style="margin-right:.10903em">N</span></span><span style="top:-3.15em"><span class="pstrut" style="height:3em"></span><span class="stretchy" style="height:.2em"><svg width="400em" height="0.2em" viewbox="0 0 400000 200" preserveaspectratio="xMinYMin slice"><path d="M0 80H400000 v40H0z M0 80H400000 v40H0z"/></svg></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em"><span style="top:-1.872331em;margin-left:0"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em"><span class="pstrut" style="height:3.05em"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right:.10903em">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em"></span></span></span></span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>结构风险简单而言就是经验风险加入了正则化项，正则化项用于表示模型复杂度，因此结构风险最小化是为了防止过拟合而提出的策略。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>s</mi><mi>r</mi><mi>m</mi></mrow></msub><mo>(</mo><mi>f</mi><mo>)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>L</mi><mo>(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>)</mo><mo>)</mo><mo>+</mo><mi>λ</mi><mi>J</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">R_{srm}(f) =\frac 1N\sum_{i=1}^NL(y_i,f(x_i))+\lambda J(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8283360000000002em"></span><span class="strut bottom" style="height:3.106005em;vertical-align:-1.277669em"></span><span class="base"><span class="mord"><span class="mord mathit" style="margin-right:.00773em">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.151392em"><span style="top:-2.5500000000000003em;margin-left:-.00773em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">s</span><span class="mord mathit mtight" style="margin-right:.02778em">r</span><span class="mord mathit mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord mathit" style="margin-right:.10903em">N</span></span><span style="top:-3.15em"><span class="pstrut" style="height:3em"></span><span class="stretchy" style="height:.2em"><svg width="400em" height="0.2em" viewbox="0 0 400000 200" preserveaspectratio="xMinYMin slice"><path d="M0 80H400000 v40H0z M0 80H400000 v40H0z"/></svg></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em"><span style="top:-1.872331em;margin-left:0"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em"><span class="pstrut" style="height:3.05em"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right:.10903em">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em"></span></span></span></span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mord mathit">λ</span><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span></span></span></span></span></p><p>其中$\lambda $&gt;=0,用以权衡经验风险和模型复杂度</p><h2 id="算法"><a class="markdownIt-Anchor" href="#算法"></a> 算法</h2><p>算法是指学习模型的具体方法，一般而言就是求解模型f中的参数以达到模型的最优化，故很多时候统计学习的算法到最后基本都是最优化问题。</p><h1 id="模型评估和模型选择"><a class="markdownIt-Anchor" href="#模型评估和模型选择"></a> 模型评估和模型选择</h1><h2 id="训练误差"><a class="markdownIt-Anchor" href="#训练误差"></a> 训练误差</h2><p>训练误差是模型关于训练数据集的平均损失，即前面所说的经验风险；</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow></msub><mo>(</mo><mi>f</mi><mo>)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>L</mi><mo>(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">R_{exp}(f) =\frac 1N\sum_{i=1}^NL(y_i,f(x_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8283360000000002em"></span><span class="strut bottom" style="height:3.106005em;vertical-align:-1.277669em"></span><span class="base"><span class="mord"><span class="mord mathit" style="margin-right:.00773em">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.15139200000000003em"><span style="top:-2.5500000000000003em;margin-left:-.00773em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">e</span><span class="mord mathit mtight">x</span><span class="mord mathit mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.286108em"></span></span></span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord mathit" style="margin-right:.10903em">N</span></span><span style="top:-3.15em"><span class="pstrut" style="height:3em"></span><span class="stretchy" style="height:.2em"><svg width="400em" height="0.2em" viewbox="0 0 400000 200" preserveaspectratio="xMinYMin slice"><path d="M0 80H400000 v40H0z M0 80H400000 v40H0z"/></svg></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em"><span style="top:-1.872331em;margin-left:0"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em"><span class="pstrut" style="height:3.05em"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right:.10903em">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em"></span></span></span></span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><h2 id="测试误差"><a class="markdownIt-Anchor" href="#测试误差"></a> 测试误差</h2><p>测试误差跟训练误差相似，只是前者是在测试数据集上的平均损失</p><h2 id="过拟合和模型选择"><a class="markdownIt-Anchor" href="#过拟合和模型选择"></a> 过拟合和模型选择</h2><p>一味最求模型对于训练数据的预测能力，所求得的模型往往会比真实模型更加复杂，这种现象叫做过拟合（模型参数过多，训练误差很小，但测试误差较大或者泛化能力很差），而模型的选择就是为了避免过拟合并提高模型对于未知数据的预测能力。</p><h2 id="正则化"><a class="markdownIt-Anchor" href="#正则化"></a> 正则化</h2><p>模型选择的典型方法是正则化，通过结构风险最小化实现，即在经验风险后加上一个正则化项，一般是模型复杂度的单调递增函数（比如L_2范数）<br>正则化的作用是选择经验风险和模型复杂度同时较小的模型；问题是为什么需要简单的模型？一方面是过拟合的存在使得模型有可能过度关注训练数据集的“个性”，导致模型的泛化能力下降；另一个解释是根据奥卡姆剃刀原理，“如无必要，勿增实体”，即在所有可能选择的模型中，能够很好地解释数据并且十分简单的模型才是最优的（尽管这个要求有点自相矛盾，此时<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.69444em;vertical-align:0"></span><span class="base"><span class="mord mathit">λ</span></span></span></span>往往起到折中的作用）；从贝叶斯估计的角度而言，正则化项对应于模型的先验概率，复杂的模型先验概率小，简单的模型先验概率大。</p><h2 id="交叉验证"><a class="markdownIt-Anchor" href="#交叉验证"></a> 交叉验证</h2><p>基本思想是重复地使用数据，对给定的数据进行划分，然后组合成训练集和测试集，反复进行训练、测试和模型的选择。</p><h3 id="简单交叉验证"><a class="markdownIt-Anchor" href="#简单交叉验证"></a> 简单交叉验证</h3><p>随机把数据集划分为训练集和测试集两部分（训练集更大），改变不同的条件使得在相同的训练集上也能得到不同的模型，然后在测试集进行模型的测试和选择。</p><h3 id="s折交叉验证"><a class="markdownIt-Anchor" href="#s折交叉验证"></a> S折交叉验证</h3><p>随机地把数据集划分为S个互不相交的子数据集，利用S-1个子数据集作为训练数据集，剩下的一个做为测试集；将这一过程对可能的S中选择重复进行，从得到的S个模型中选择测试误差最小的模型。</p><h3 id="留一交叉验证"><a class="markdownIt-Anchor" href="#留一交叉验证"></a> 留一交叉验证</h3><p>S=N时，用于数据缺乏的情况下，即每次只拿一个数据样本作为测试集，进行N次相同操作，从N个模型中选择最优者（平均测试误差最小）。</p><h1 id="泛化能力"><a class="markdownIt-Anchor" href="#泛化能力"></a> 泛化能力</h1><p>generalization alibity指由学习方法得到的模型对于未知数据的预测能力，常用测试误差评价学习方法的泛化能力，仅记测试数据集是十分宝贵的，在学习模型的过程中不能使用，要在训练完成后才能用于测试，保证对于学得的模型而言，测试数据是“未知的”。对于泛化能力的分析往往通过研究泛化误差的概率上界进行，常具有以下性质：样本容量增加，泛化上界趋于0；假设空间容量越大，模型就越难学，泛化误差上界就越大。<br>存在定理，对于二类分类问题，当假设空间是有限个函数的集合时F={f1,f2,f3…,fd},对任意一个函数f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base"><span class="mrel">∈</span></span></span></span>F,至少以概率1-<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.69444em;vertical-align:0"></span><span class="base"><span class="mord mathit" style="margin-right:.03785em">δ</span></span></span></span>,以下不等式成立：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>(</mo><mi>f</mi><mo>)</mo><mo>&lt;</mo><mo>=</mo><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo>(</mo><mi>f</mi><mo>)</mo><mo>+</mo><mi>ϵ</mi><mo>(</mo><mi>d</mi><mo separator="true">,</mo><mi>N</mi><mo separator="true">,</mo><mi>δ</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">R(f)&lt;=\hat R(f)+\epsilon (d,N,\delta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.9467699999999999em"></span><span class="strut bottom" style="height:1.19677em;vertical-align:-.25em"></span><span class="base"><span class="mord mathit" style="margin-right:.00773em">R</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">&lt;</span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.9467699999999999em"><span style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mathit" style="margin-right:.00773em">R</span></span><span style="top:-3.25233em"><span class="pstrut" style="height:3em"></span><span class="accent-body" style="left:-.16666em">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.10764em">f</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mord mathit">ϵ</span><span class="mopen">(</span><span class="mord mathit">d</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.10903em">N</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.03785em">δ</span><span class="mclose">)</span></span></span></span></span></p><p>即泛化误差&lt;=训练误差+N的单调递减函数(右端即为泛化误差的上界)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>(</mo><mi>d</mi><mo separator="true">,</mo><mi>N</mi><mo separator="true">,</mo><mi>δ</mi><mo>)</mo><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mi>N</mi></mrow></mfrac><mo>(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>d</mi><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>1</mn><mi>δ</mi></mfrac><mo>)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">\epsilon (d,N,\delta)=\sqrt {\frac 1{2N}(logd+log\frac 1\delta)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.651595em"></span><span class="strut bottom" style="height:2.44em;vertical-align:-.788405em"></span><span class="base"><span class="mord mathit">ϵ</span><span class="mopen">(</span><span class="mord mathit">d</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.10903em">N</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.03785em">δ</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.651595em"><span class="svg-align" style="top:-4.4em"><span class="pstrut" style="height:4.4em"></span><span class="mord" style="padding-left:1em"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">2</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span><span style="top:-3.15em"><span class="pstrut" style="height:3em"></span><span class="stretchy" style="height:.2em"><svg width="400em" height="0.2em" viewbox="0 0 400000 200" preserveaspectratio="xMinYMin slice"><path d="M0 80H400000 v40H0z M0 80H400000 v40H0z"/></svg></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:.03588em">g</span><span class="mord mathit">d</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mord rule" style="margin-right:.2222222222222222em"></span><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:.03588em">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord mathit" style="margin-right:.03785em">δ</span></span><span style="top:-3.15em"><span class="pstrut" style="height:3em"></span><span class="stretchy" style="height:.2em"><svg width="400em" height="0.2em" viewbox="0 0 400000 200" preserveaspectratio="xMinYMin slice"><path d="M0 80H400000 v40H0z M0 80H400000 v40H0z"/></svg></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-3.6115950000000003em"><span class="pstrut" style="height:4.4em"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em"><svg width="400em" height="2.48em" viewbox="0 0 400000 2592" preserveaspectratio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.788405em"></span></span></span></span></span></span></span></span></p><p>可见泛化误差上界和训练误差、样本容量均正相关，和模型复杂度d负相关。</p><h1 id="生成模型和判别模型"><a class="markdownIt-Anchor" href="#生成模型和判别模型"></a> 生成模型和判别模型</h1><h2 id="生成模型"><a class="markdownIt-Anchor" href="#生成模型"></a> 生成模型</h2><p>由生成方法学到的模型称为生成模型，生成方法由数据学习联合概率分布P(X,Y),然后求出条件概率分布P(Y|X)作为预测的模型，即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>X</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(Y|X)=\frac {P(X,Y)}{P(X)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.427em"></span><span class="strut bottom" style="height:2.363em;vertical-align:-.936em"></span><span class="base"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mord">∣</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mclose">)</span></span></span><span style="top:-3.15em"><span class="pstrut" style="height:3em"></span><span class="stretchy" style="height:.2em"><svg width="400em" height="0.2em" viewbox="0 0 400000 200" preserveaspectratio="xMinYMin slice"><path d="M0 80H400000 v40H0z M0 80H400000 v40H0z"/></svg></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:.07847em">X</span><span class="mpunct">,</span><span class="mord rule" style="margin-right:.16666666666666666em"></span><span class="mord mathit" style="margin-right:.22222em">Y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.936em"></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>生成模型表示了给定输入X产生输出Y的生成关系，典型的生成模型由朴素贝叶斯法和隐马尔可夫模型。</p><h2 id="判别模型"><a class="markdownIt-Anchor" href="#判别模型"></a> 判别模型</h2><p>由判别方法学到的模型称为判别模型，判别方法由数据直接学习决策函数f(X)或者条件概率P(Y|X)作为预测的模型。判别模型表示给定输入X应该预测什么样的输出Y。典型的判别模型有k紧邻法，感知机，决策树，逻辑斯谛回归模型，最大熵模型，支持向量机，提升方法，条件随机场等。</p><p>存在隐变量时不能使用判别方法，但可以用生成方法；判别方法直接面对预测，准确率更高。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Aug 28 2018 01:01:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;李航老师的《统计学习方法》基本已经过一遍了，感觉只是略懂皮毛，现为了加强知识点的认识和部分课后题的实现，有必要进行个人总结。&lt;/p&gt;&lt;h1 id
      
    
    </summary>
    
      <category term="统计学习" scheme="http://aier02.com/categories/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="统计学习概论" scheme="http://aier02.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/"/>
    
      <category term="第一章" scheme="http://aier02.com/tags/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    
      <category term="基础知识" scheme="http://aier02.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Mac Hexo+Github page 搭建个人blog</title>
    <link href="http://aier02.com/2018/08/07/blog_tutorial/"/>
    <id>http://aier02.com/2018/08/07/blog_tutorial/</id>
    <published>2018-08-07T11:24:35.583Z</published>
    <updated>2018-08-07T13:24:24.736Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Aug 28 2018 01:01:44 GMT+0800 (GMT+08:00) --><p>最近在加强ml和cv基础知识的学习，为了加深理解，同时记录自己的学习过程，尝试着写blog；向好友请教后得知建立个人blog的方式，我的选择是Hexo(一种静态博客网页框架)+Github page（免费托管博客项目代码），当然还有租云服务器和自己写后台和前端的方式，前者更加方便和易于上手。</p><h2 id="前期准备"><a class="markdownIt-Anchor" href="#前期准备"></a> 前期准备</h2><h3 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装Git</h3><p>毕竟所有项目代码都是托管到Github上面，必须保证系统中已经安装了git，terminal中输入git不出现commant not found即可</p><h3 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装Node.js</h3><p>因为Hexo的使用基于Node.js，所以要先安装Node.js和他的包安装器npm,建议到<a href="https://nodejs.org/" target="_blank" rel="noopener">官网</a>下载pkg并选择稳定版本(LTS)</p><h3 id="github创建项目"><a class="markdownIt-Anchor" href="#github创建项目"></a> Github创建项目</h3><p>在Github上面创建一个名为：<a href="http://yourname.github.io" target="_blank" rel="noopener">yourname.github.io</a> 的空项目，yourname是指你创建的github账户名（github上面每个用户的用户名是唯一的标识），该Repository就是之后你的blog所有代码和文件存放的地方，blog的地址在不添加设置的情况下：<a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a></p><h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装Hexo</h3><p>在终端输入npm命令下载静态网页生成器Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><p>若出现permiss denied等情况，则加入sudo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="创建hexo文件夹"><a class="markdownIt-Anchor" href="#创建hexo文件夹"></a> 创建Hexo文件夹</h3><p>在本地文件系统中创建Hexo文件夹，cd进入该文件夹，然后进行初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hexo init</span><br></pre></td></tr></table></figure><p>没有错误，则以后所有操作都必须在该文件目录下进行，特别注意文件夹<code>Hexo/node_models</code>,所有通过npm install XXX --save操作下载的依赖都会存放在该文件夹中，易于包的管理(–save参数的意义就是存放在node_models)</p><p>顺利完成上述步骤后可以登陆https://yourname.github.io 查看效果</p><h2 id="绑定个人域名"><a class="markdownIt-Anchor" href="#绑定个人域名"></a> 绑定个人域名</h2><p>Ps:不想花钱的同学可以跳过</p><h3 id="购买国外个人域名"><a class="markdownIt-Anchor" href="#购买国外个人域名"></a> 购买国外个人域名</h3><p>对于没有个人域名的同学来说，国内备案实在是太漫长了(我前段时间就在腾讯云备案过一次，周期太长==)，直接购买国外的域名方便而且预算基本一样，推荐<a href="https://www.namesilo.com" target="_blank" rel="noopener">namesilo</a>，60一年，后缀多选择而且有免费的private protection；注册的时候我写的假的信息(除了邮箱）；一开始先检索你想注册的域名，然后在根据英文指导取购买就ok了(默认设置),网站支持alipay，非常方便了。</p><h3 id="更改dns"><a class="markdownIt-Anchor" href="#更改dns"></a> 更改DNS</h3><p>统一使用一个dns的话对于以后多域名管会更加方便，推荐使用国内的厂商<a href="https://www.dnspod.cn" target="_blank" rel="noopener">dnspod</a>，登陆后添加你更注册的域名进行管理，主要添加连个主机记录，分别是@和www,譬如我的设置为</p><p><img src="/images/180807/dnspodset.png" alt=""></p><p>图中A记录的记录值为github page中项目的ip，可以通过在终端中输入ping <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> 找到，也可在Github help中找到。</p><p>登陆<a href="https://www.namesilo.com" target="_blank" rel="noopener">namesilo</a>，在右侧找到domain manager,进入后选择更改nameserver,处理过程还是挺长的，所以不用急着登陆你的域名</p><p><img src="/images/180807/domain.png" alt=""></p><h2 id="更改blog主题"><a class="markdownIt-Anchor" href="#更改blog主题"></a> 更改blog主题</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p><h3 id="选择主题"><a class="markdownIt-Anchor" href="#选择主题"></a> 选择主题</h3><p>进入官网选择适合的主题[hexo]<br>(<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>)，进入相应的Github地址，git clone命令把整个文件夹都下载下来，存放在<code>Hexo/themes</code>文件夹中。</p><h3 id="更改配置文件"><a class="markdownIt-Anchor" href="#更改配置文件"></a> 更改配置文件</h3><p>一般而言，下载下来的主题文件中都有新手引导，注意readme就ok了。</p><h2 id="部署项目代码"><a class="markdownIt-Anchor" href="#部署项目代码"></a> 部署项目代码</h2><p>在<code>Hexo/_config.yml</code>和themes里面的config文件中添加以下说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/aier02/aier02.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>注意修改repo的地址为你的github上面的地址(只要修改你的用户名)</p><p>在Hexo目录下输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>即可将本地下的<code>Hexo/public</code>文件夹所有内容上传到github项目中(可能需要生成公私钥，请自行百度）</p><p>hexo clean实质是删除<code>Hexo/public</code>，而hexo g则是根据配置和<code>Hexo/source</code>生成<code>Hexo/public</code>,新写的blog存放在<code>Hexo/source/_posts</code>即可，hexo d命令则是将<code>Hexo/public</code>上传到git服务器中,使用个人域名的同学还得在Github上面的yourname.github.io仓库根目录下新建一个CNAME文件，写入你的个人域名,不需要http和www,比如我的就是在第一行为：<a href="http://aier02.com">aier02.com</a></p><h2 id="个人寄语"><a class="markdownIt-Anchor" href="#个人寄语"></a> 个人寄语</h2><p>blog关键在于内容，所以我基本很多操作都是为了方便，倘若遇到了什么问题可在下方评论提出(主要是看我是否也遇到了可以提供解决方案，没有踩过的坑我也不会=。=）,还有可以选择的theme很多，奉劝各位以实用为主，再好看的blog没有内容也是没价值的。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Aug 28 2018 01:01:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;最近在加强ml和cv基础知识的学习，为了加深理解，同时记录自己的学习过程，尝试着写blog；向好友请教后得知建立个人blog的方式，我的选择是H
      
    
    </summary>
    
      <category term="博客" scheme="http://aier02.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="http://aier02.com/tags/Hexo/"/>
    
      <category term="Github page" scheme="http://aier02.com/tags/Github-page/"/>
    
      <category term="namesilo" scheme="http://aier02.com/tags/namesilo/"/>
    
  </entry>
  
</feed>
